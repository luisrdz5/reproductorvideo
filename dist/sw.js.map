{"version":3,"sources":["sw.js"],"names":["VERSION","self","addEventListener","event","waitUntil","precache","request","method","respondWith","cachedResponse","updateCache","caches","open","cache","addAll","match","response","fetch","put"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAE,IAAf;AAEAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAAAC,KAAK,EAAI;AACtCA,EAAAA,KAAK,CAACC,SAAN,CAAgBC,QAAQ,EAAxB;AACH,CAFD;AAIAJ,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAAAC,KAAK,EAAI;AACpC,MAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB,CADoC,CAEpC;;AACA,MAAGA,OAAO,CAACC,MAAR,KAAmB,KAAtB,EAA4B;AACxB;AACH,GALmC,CAMpC;;;AACAJ,EAAAA,KAAK,CAACK,WAAN,CAAkBC,cAAc,CAACH,OAAD,CAAhC,EAPoC,CAQpC;;AACAH,EAAAA,KAAK,CAACC,SAAN,CAAgBM,WAAW,CAACJ,OAAD,CAA3B;AAGH,CAZD;;SAceD;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBM,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA,6CAEWA,KAAK,CAACC,MAAN,CAAa,CAChB,GADgB,CAAb,CAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAaeL;;;;;;;0BAAf,kBAA+BH,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBK,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA;AAAA,mBAE2BA,KAAK,CAACE,KAAN,CAAYT,OAAZ,CAF3B;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAGWA,QAAQ,IAAIC,KAAK,CAACX,OAAD,CAH5B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;SAKeI;;;;;;;0BAAf,kBAA4BJ,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBK,MAAM,CAACC,IAAP,CAAYZ,OAAZ,CADxB;;AAAA;AACUa,YAAAA,KADV;AAAA;AAAA,mBAE2BI,KAAK,CAACX,OAAD,CAFhC;;AAAA;AAEUU,YAAAA,QAFV;AAAA,8CAGWH,KAAK,CAACK,GAAN,CAAUZ,OAAV,EAAkBU,QAAlB,CAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"sw.js","sourceRoot":"..","sourcesContent":["const VERSION =\"v1\"\r\n\r\nself.addEventListener('install', event => {\r\n    event.waitUntil(precache())\r\n})\r\n\r\nself.addEventListener('fetch', event => {\r\n    const request = event.request;\r\n    //get \r\n    if(request.method !== \"GET\"){\r\n        return\r\n    }\r\n    //buscar en cache\r\n    event.respondWith(cachedResponse(request))\r\n    //Actualizamos el cache \r\n    event.waitUntil(updateCache(request))\r\n\r\n\r\n})\r\n\r\nasync function precache() {\r\n    const cache = await caches.open(VERSION)\r\n    return cache.addAll([\r\n        '/',\r\n        // '/index.html',\r\n        // '/assets/index.js',\r\n        // '/assets/MediaPlayer.js',\r\n        // '/assets/plugins/Autoplay.js',\r\n        // '/assets/plugins/AutoPause.js',\r\n        // '/assets/index.css',\r\n        // '/assets/gears5.mp4',\r\n    ])\r\n}\r\nasync function cachedResponse (request){\r\n    const cache = await caches.open(VERSION)\r\n    const response = await cache.match(request)\r\n    return response || fetch(request)\r\n}\r\nasync function updateCache (request){\r\n    const cache = await caches.open(VERSION)\r\n    const response = await fetch(request)\r\n    return cache.put(request,response)\r\n}"]}